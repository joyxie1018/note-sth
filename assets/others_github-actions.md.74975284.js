import{_ as s,o as a,c as o,Q as n}from"./chunks/framework.00173f8d.js";const F=JSON.parse('{"title":"GitHub Actions","description":"","frontmatter":{},"headers":[],"relativePath":"others/github-actions.md","filePath":"others/github-actions.md"}'),l={name:"others/github-actions.md"},p=n(`<h1 id="github-actions" tabindex="-1">GitHub Actions <a class="header-anchor" href="#github-actions" aria-label="Permalink to &quot;GitHub Actions&quot;">​</a></h1><p>Github 提供的 <code>CI/CD</code> 服務。</p><h2 id="何謂ci-cd" tabindex="-1">何謂CI/CD <a class="header-anchor" href="#何謂ci-cd" aria-label="Permalink to &quot;何謂CI/CD&quot;">​</a></h2><p>CI/CD 代表的是 <code>Continuous Integration 持續整合</code>與 <code>Continuous Deployment 持續部署</code>， 也就是將程式流程自動化，在push原始碼的同時自動build、自動測試、自動部署。</p><h2 id="github-actions-的基本元素" tabindex="-1">Github Actions 的基本元素 <a class="header-anchor" href="#github-actions-的基本元素" aria-label="Permalink to &quot;Github Actions 的基本元素&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Workflow</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># CI/CD 一次要運行的整個過程，就稱作 Workflow</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Job</span><span style="color:#E1E4E8;">             </span><span style="color:#6A737D;"># 代表「任務」 一個 Workflow 由多個 Job 組成</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Step</span><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 代表「步驟」，一個 Job 由多個 Step 組成</span></span>
<span class="line"><span style="color:#B392F0;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">│</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">└──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Action</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 「命令」或「動作」，每個 Step 可以依序執行多個命令</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Workflow</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># CI/CD 一次要運行的整個過程，就稱作 Workflow</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Job</span><span style="color:#24292E;">             </span><span style="color:#6A737D;"># 代表「任務」 一個 Workflow 由多個 Job 組成</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Step</span><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 代表「步驟」，一個 Job 由多個 Step 組成</span></span>
<span class="line"><span style="color:#6F42C1;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">│</span><span style="color:#24292E;">   </span><span style="color:#032F62;">└──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Action</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 「命令」或「動作」，每個 Step 可以依序執行多個命令</span></span></code></pre></div>`,6),t=[p];function e(c,r,i,E,y,h){return a(),o("div",null,t)}const u=s(l,[["render",e]]);export{F as __pageData,u as default};
